title Simple Block Pushing Game
author Stephen Lavelle
homepage www.puzzlescript.net

========
OBJECTS
========

A_FrameRider
black red white
11111
10001
10201
10001
11111

B_FrameRider
black blue white
11111
10001
10201
10001
11111

A_Frame
grey red
11111
1...1
1...1
1...1
11111

B_Frame
grey red
11111
1...1
1...1
1...1
11111

Wall
gray lightblue
00000
00000
00000
00000
11111

Raised
gray lightblue
00000
00000
00000
00000
11111

Lowered
gray white
11111
00000
00000
00000
00000

Floor
white gray
00000
00000
00000
00000
00000

5
white black
.....
.111.
.101.
.111.
.....

8
white black
.111.
.101.
.111.
.....
.....

4
white black
.....
111..
101..
111..
.....

6
white black
.....
..111
..101
..111
.....

2
white black
.....
.....
.111.
.101.
.111.

7
white black
111..
101..
111..
.....
.....

9
white black
..111
..101
..111
.....
.....

3
white black
.....
.....
..111
..101
..111

1
white black
.....
.....
111..
101..
111..

Player
white
.....
.....
.....
.....

=======
LEGEND
=======

p = Player
Background = Floor
. = Floor

# = Wall
@ = Raised
_ = lowered

A = A_Frame
B = B_Frame

Frame = A_Frame or B_Frame
FrameRider = A_FrameRider or B_FrameRider

Rider = 5
Mover = 1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9
Barrier = wall or raised

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Floor, Lowered
Wall, Raised, Frame, FrameRider
Player, 5, 4, 6, 8, 2, 7, 9, 3, 1

======
RULES
======

[> player] [ FrameRider ] -> [ player ] [> FrameRider]

[> Player] [5] -> [Player] [> 5]
[> Player] [8] -> [Player] [> 8]
[> Player] [2] -> [Player] [> 2]
[> Player] [4] -> [Player] [> 4]
[> Player] [6] -> [Player] [> 6]
[> Player] [7] -> [Player] [> 7]
[> Player] [9] -> [Player] [> 9]
[> Player] [1] -> [Player] [> 1]
[> Player] [3] -> [Player] [> 3]

( center to edges )
UP    [> 5] -> [8]
DOWN  [> 5] -> [2]
LEFT  [> 5] -> [4]
RIGHT [> 5] -> [6]

( edges to center ) 
DOWN  [> 8] -> [5]
UP    [> 2] -> [5]
LEFT  [> 6] -> [5]
RIGHT [> 4] -> [5]

( center to corners )
LEFT  [> 8] -> [7]
RIGHT [> 8] -> [9]

LEFT  [> 2] -> [1]
RIGHT [> 2] -> [3]

UP    [> 4] -> [7]
DOWN  [> 4] -> [1]

UP    [> 6] -> [9]
DOWN  [> 6] -> [3]

( corners to center )
LEFT  [> 9] -> [8]
RIGHT [> 7] -> [8]

LEFT  [> 3] -> [2]
RIGHT [> 1] -> [2]

UP    [> 1] -> [4]
DOWN  [> 7] -> [4]

UP    [> 3] -> [6]
DOWN  [> 9] -> [6]


[> Mover | Barrier ] -> [ Mover | Barrier ]

(exit from edges )
DOWN  [> 2| no wall ] -> [|8 ]
UP    [> 8| no wall ] -> [|2 ]
LEFT  [> 4| no wall ] -> [|6 ]
RIGHT [> 6| no wall ] -> [|4 ]

(exit from corners )
UP    [> 7| no wall ] -> [|1]
LEFT  [> 7| no wall ] -> [|9]

UP    [> 9| no wall ] -> [|3]
RIGHT [> 9| no wall ] -> [|7]

DOWN  [> 3| no wall ] -> [|9]
RIGHT [> 3| no wall ] -> [|1]

DOWN  [> 1| no wall ] -> [|7]
LEFT  [> 1| no wall ] -> [|3]

( mounting and dismounting )
[action player] [ rider a_frame ]  -> [player] [ action a_frameRider ]
[action player] [ rider b_frame ]  -> [player] [ action b_frameRider ]

[action player] [ a_frameRider ]   -> [player] [ action rider a_frame ]
[action player] [ b_frameRider ]   -> [player] [ action rider b_frame ]

( upon mounting or dismounting, barriers change )
[ action frameRider ] [ raised ] -> [ frameRider] [ lowered ]
[ action rider ] [ lowered ] -> [ rider ] [ raised ]


==============
WINCONDITIONS
==============


